"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[387],{7815:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"config","title":"Configuration Reference","description":"This page provides a complete reference for all configuration options available","source":"@site/docs/config.mdx","sourceDirName":".","slug":"/config","permalink":"/flutter_tether/config","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Full Text Search","permalink":"/flutter_tether/full_text_search"},"next":{"title":"Additional Features","permalink":"/flutter_tether/category/additional-features"}}');var s=r(4848),t=r(8453);const d={sidebar_position:7},l="Configuration Reference",a={},c=[{value:"Basic Structure",id:"basic-structure",level:2},{value:"Database Configuration",id:"database-configuration",level:2},{value:"Database Options",id:"database-options",level:3},{value:"Generation Configuration",id:"generation-configuration",level:2},{value:"Global Generation Settings",id:"global-generation-settings",level:3},{value:"Global Options",id:"global-options",level:4},{value:"Models Configuration",id:"models-configuration",level:3},{value:"Model Options",id:"model-options",level:4},{value:"Client Managers Configuration",id:"client-managers-configuration",level:3},{value:"Client Manager Options",id:"client-manager-options",level:4},{value:"Supabase Select Builders Configuration",id:"supabase-select-builders-configuration",level:3},{value:"Select Builder Options",id:"select-builder-options",level:4},{value:"SQLite Migrations Configuration",id:"sqlite-migrations-configuration",level:3},{value:"Migration Options",id:"migration-options",level:4},{value:"Providers Configuration",id:"providers-configuration",level:3},{value:"Provider Options",id:"provider-options",level:4},{value:"Authentication Configuration",id:"authentication-configuration",level:3},{value:"Authentication Options",id:"authentication-options",level:4},{value:"Background Services Configuration",id:"background-services-configuration",level:3},{value:"Background Service Options",id:"background-service-options",level:4},{value:"User Preferences Configuration",id:"user-preferences-configuration",level:3},{value:"User Preferences Options",id:"user-preferences-options",level:4},{value:"Schema Registry Configuration",id:"schema-registry-configuration",level:3},{value:"Schema Registry Options",id:"schema-registry-options",level:4},{value:"Complete Example",id:"complete-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Table Filtering",id:"table-filtering",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Feature Flags",id:"feature-flags",level:3},{value:"Validation",id:"validation",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration-reference",children:"Configuration Reference"})}),"\n",(0,s.jsxs)(n.p,{children:["This page provides a complete reference for all configuration options available\nin your ",(0,s.jsx)(n.code,{children:"tether.yaml"})," file. The configuration file controls how Tether analyzes\nyour Supabase schema and generates Flutter code."]}),"\n",(0,s.jsx)(n.h2,{id:"basic-structure",children:"Basic Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"database:\n  # Database connection settings\n  \ngeneration:\n  # Code generation settings\n"})}),"\n",(0,s.jsx)(n.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"database"})," section configures how Tether connects to your Supabase database\nfor schema introspection."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"database:\n  host: TETHER_SUPABASE_HOST        # Environment variable reference\n  port: TETHER_PORT_NAME            # Database port (usually 5432)\n  database: TETHER_DB_NAME          # Database name (usually 'postgres')\n  username: TETHER_DB_USERNAME      # Database username\n  password: TETHER_DB_PASSWORD      # Database password\n  ssl: TETHER_SSL                   # Use SSL connection (true/false)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"database-options",children:"Database Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"host"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Supabase database host URL"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"port"})}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"5432"}),(0,s.jsx)(n.td,{children:"Database port number"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"database"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"postgres"}),(0,s.jsx)(n.td,{children:"Database name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"username"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Database username"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"password"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Database password"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ssl"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"Whether to use SSL connection"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Environment Variable Usage:"})," Configuration values starting with uppercase\nletters (like ",(0,s.jsx)(n.code,{children:"TETHER_SUPABASE_HOST"}),") are treated as environment variable\nreferences. Create a ",(0,s.jsx)(n.code,{children:".env"})," file with these values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"TETHER_SUPABASE_HOST=your_supabase_host\nTETHER_PORT_NAME=5432\nTETHER_DB_NAME=postgres\nTETHER_DB_USERNAME=postgres\nTETHER_DB_PASSWORD=your_password\nTETHER_SSL=true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"generation-configuration",children:"Generation Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"generation"})," section controls all aspects of code generation."]}),"\n",(0,s.jsx)(n.h3,{id:"global-generation-settings",children:"Global Generation Settings"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  output_directory: lib/database           # Where to generate files\n  generate_for_all_tables: true           # Generate for all tables\n  \n  # Table filtering\n  exclude_tables:                          # Tables to skip\n    - '_realtime.*'\n    - 'auth.*'\n    - 'net.*'\n    - 'pgsodium.*'\n    - 'realtime.*'\n    - 'storage.*'\n    - 'supabase_functions.*'\n    - 'vault.*'\n  \n  include_tables: []                       # Only generate for these tables\n  exclude_references: []                   # Skip these foreign key relationships\n  \n  # Database settings\n  databaseName: 'app_db.sqlite'           # Local SQLite database name\n  \n  # Naming conventions\n  sanitization_endings:                    # Remove these suffixes from field names\n    - _id\n    - _fk\n    - _uuid\n"})}),"\n",(0,s.jsx)(n.h4,{id:"global-options",children:"Global Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"output_directory"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lib/database"})}),(0,s.jsx)(n.td,{children:"Root directory for generated files"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"generate_for_all_tables"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to generate code for all discovered tables"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"exclude_tables"})}),(0,s.jsx)(n.td,{children:"List<String>"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{children:"Table patterns to exclude (supports regex)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"include_tables"})}),(0,s.jsx)(n.td,{children:"List<String>"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{children:"Only generate for these tables (overrides exclude)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"exclude_references"})}),(0,s.jsx)(n.td,{children:"List<String>"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{children:"Foreign key relationships to ignore"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"databaseName"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"app_db.sqlite"})}),(0,s.jsx)(n.td,{children:"Name of the local SQLite database file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sanitization_endings"})}),(0,s.jsx)(n.td,{children:"List<String>"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{children:"Suffixes to remove from field names when generating Dart properties"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"models-configuration",children:"Models Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of Dart model classes from your database tables."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  models:\n    enabled: true                          # Enable model generation\n    filename: models.g.dart               # Output filename\n    prefix: ''                            # Prefix for model class names\n    suffix: Model                         # Suffix for model class names\n    use_null_safety: true                 # Use Dart null safety\n"})}),"\n",(0,s.jsx)(n.h4,{id:"model-options",children:"Model Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to generate model classes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"filename"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"models.g.dart"})}),(0,s.jsx)(n.td,{children:"Name of the generated models file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"prefix"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"''"})}),(0,s.jsx)(n.td,{children:"Prefix added to all model class names"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"suffix"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Model"})}),(0,s.jsx)(n.td,{children:"Suffix added to all model class names"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"use_null_safety"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether generated models use null safety"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example:"})," With ",(0,s.jsx)(n.code,{children:"suffix: Model"}),", a ",(0,s.jsx)(n.code,{children:"books"})," table becomes ",(0,s.jsx)(n.code,{children:"BookModel"})," class."]}),"\n",(0,s.jsx)(n.h3,{id:"client-managers-configuration",children:"Client Managers Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of high-level data access managers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  client_managers:\n    enabled: true                          # Enable manager generation\n    use_riverpod: true                     # Generate Riverpod providers\n    suffix: Manager                        # Suffix for manager class names\n"})}),"\n",(0,s.jsx)(n.h4,{id:"client-manager-options",children:"Client Manager Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to generate client managers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"use_riverpod"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether to generate Riverpod providers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"suffix"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Manager"})}),(0,s.jsx)(n.td,{children:"Suffix added to manager class names"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"supabase-select-builders-configuration",children:"Supabase Select Builders Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of type-safe query builders."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  supabase_select_builders:\n    enabled: true                          # Enable select builder generation\n    filename: 'supabase_select_builders.g.dart'  # Output filename\n    generated_schema_dart_file_name: 'supabase_schema.g.dart'  # Schema file\n    suffix: SelectBuilder                  # Suffix for builder class names\n"})}),"\n",(0,s.jsx)(n.h4,{id:"select-builder-options",children:"Select Builder Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to generate select builders"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"filename"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"supabase_select_builders.g.dart"})}),(0,s.jsx)(n.td,{children:"Name of builders file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"generated_schema_dart_file_name"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"supabase_schema.g.dart"})}),(0,s.jsx)(n.td,{children:"Name of schema definitions file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"suffix"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SelectBuilder"})}),(0,s.jsx)(n.td,{children:"Suffix for builder class names"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"sqlite-migrations-configuration",children:"SQLite Migrations Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of SQLite migration files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  sqlite_migrations:\n    enabled: true                          # Enable migration generation\n    output_subdir: 'sqlite_migrations'     # Subdirectory for migration files\n"})}),"\n",(0,s.jsx)(n.h4,{id:"migration-options",children:"Migration Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsx)(n.td,{children:"Whether to generate SQLite migrations"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"output_subdir"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sqlite_migrations"})}),(0,s.jsx)(n.td,{children:"Subdirectory within output_directory for migrations"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"providers-configuration",children:"Providers Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of Riverpod providers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  providers:\n    enabled: true                          # Enable provider generation\n    output_subdir: 'providers'             # Subdirectory for provider files\n"})}),"\n",(0,s.jsx)(n.h4,{id:"provider-options",children:"Provider Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether to generate Riverpod providers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"output_subdir"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"providers"})}),(0,s.jsx)(n.td,{children:"Subdirectory for provider files"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of authentication management code."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  authentication:\n    enabled: true                          # Enable auth manager generation\n    profile_table: 'profiles'              # Table containing user profiles\n"})}),"\n",(0,s.jsx)(n.h4,{id:"authentication-options",children:"Authentication Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether to generate authentication manager"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"profile_table"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"profiles"})}),(0,s.jsx)(n.td,{children:"Name of the table storing user profile data"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The profile table must have an ",(0,s.jsx)(n.code,{children:"id"})," column that references ",(0,s.jsx)(n.code,{children:"auth.users(id)"})]}),"\n",(0,s.jsx)(n.li,{children:"Enable Row Level Security (RLS) on the profile table"}),"\n",(0,s.jsx)(n.li,{children:"Set up appropriate RLS policies for user access"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"background-services-configuration",children:"Background Services Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of background job processing system."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  background_services:\n    enabled: true                          # Enable background service generation\n"})}),"\n",(0,s.jsx)(n.h4,{id:"background-service-options",children:"Background Service Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether to generate background job system"})]})})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Additional Requirements:"})," Add ",(0,s.jsx)(n.code,{children:"flutter_background_service"})," to your\n",(0,s.jsx)(n.code,{children:"pubspec.yaml"})," when enabled."]}),"\n",(0,s.jsx)(n.h3,{id:"user-preferences-configuration",children:"User Preferences Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of user preferences management system."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  user_preferences:\n    enabled: true                          # Enable preferences manager generation\n"})}),"\n",(0,s.jsx)(n.h4,{id:"user-preferences-options",children:"User Preferences Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Whether to generate user preferences manager"})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"schema-registry-configuration",children:"Schema Registry Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Controls generation of schema metadata files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"generation:\n  schema_registry_file_name: 'schema_registry.g.dart'  # Schema registry filename\n"})}),"\n",(0,s.jsx)(n.h4,{id:"schema-registry-options",children:"Schema Registry Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"schema_registry_file_name"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"schema_registry.g.dart"})}),(0,s.jsx)(n.td,{children:"Name of the schema registry file"})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,s.jsxs)(n.p,{children:["Here's a complete ",(0,s.jsx)(n.code,{children:"tether.yaml"})," configuration with all options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"database:\n  host: TETHER_SUPABASE_HOST \n  port: TETHER_PORT_NAME \n  database: TETHER_DB_NAME \n  username: TETHER_DB_USERNAME \n  password: TETHER_DB_PASSWORD \n  ssl: TETHER_SSL \n\ngeneration:\n  # Global settings\n  output_directory: lib/database\n  exclude_tables:\n    - '_realtime.*'\n    - 'auth.*'\n    - 'net.*'\n    - 'pgsodium.*'\n    - 'realtime.*'\n    - 'storage.*'\n    - 'supabase_functions.*'\n    - 'vault.*'\n  include_tables: []\n  exclude_references: []\n  generate_for_all_tables: true\n  databaseName: 'app_db.sqlite'\n\n  # Models\n  models:\n    enabled: true \n    filename: models.g.dart\n    prefix: ''\n    suffix: Model\n    use_null_safety: true\n\n  # Query builders\n  supabase_select_builders:\n    enabled: true \n    filename: 'supabase_select_builders.g.dart'\n    generated_schema_dart_file_name: 'supabase_schema.g.dart'\n    suffix: SelectBuilder\n\n  # Schema registry\n  schema_registry_file_name: 'schema_registry.g.dart'\n\n  # Migrations\n  sqlite_migrations:\n    enabled: true \n    output_subdir: 'sqlite_migrations'\n\n  # Managers\n  client_managers:\n    enabled: true \n    use_riverpod: true\n\n  # Providers\n  providers:\n    enabled: true \n    output_subdir: 'providers'\n\n  # Features\n  authentication:\n    enabled: true\n    profile_table: 'profiles' \n\n  background_services:\n    enabled: true\n\n  user_preferences:\n    enabled: true\n\n  # Naming\n  sanitization_endings:\n    - _id\n    - _fk\n    - _uuid\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"table-filtering",children:"Table Filtering"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"exclude_tables"})," for system tables you don't need:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"exclude_tables:\n  - '_realtime.*'      # Supabase internal tables\n  - 'auth.*'           # Authentication system tables\n  - 'storage.*'        # Storage system tables\n  - 'temp_*'           # Temporary tables\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"include_tables"})," when you only want specific tables:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"include_tables:\n  - 'public.users'\n  - 'public.posts'\n  - 'public.comments'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"sanitization_endings"})," to clean up field names:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"sanitization_endings:\n  - _id      # user_id becomes user\n  - _fk      # author_fk becomes author\n  - _uuid    # session_uuid becomes session\n"})}),"\n",(0,s.jsx)(n.p,{children:"This creates cleaner Dart property names while maintaining database\nrelationships."}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"Always use environment variables for sensitive data:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# \u2705 Good - uses environment variables\ndatabase:\n  host: TETHER_SUPABASE_HOST\n  password: TETHER_DB_PASSWORD\n\n# \u274c Bad - hardcoded values\ndatabase:\n  host: "abc123.supabase.co"\n  password: "my-secret-password"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"feature-flags",children:"Feature Flags"}),"\n",(0,s.jsx)(n.p,{children:"Enable only the features you need:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# Minimal setup\ngeneration:\n  models:\n    enabled: true\n  client_managers:\n    enabled: true\n\n# Full-featured setup\ngeneration:\n  models:\n    enabled: true\n  client_managers:\n    enabled: true\n    use_riverpod: true\n  authentication:\n    enabled: true\n  background_services:\n    enabled: true\n  user_preferences:\n    enabled: true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,s.jsx)(n.p,{children:"Tether validates your configuration and will show helpful error messages for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Missing required database connection parameters"}),"\n",(0,s.jsx)(n.li,{children:"Invalid table name patterns"}),"\n",(0,s.jsx)(n.li,{children:"Conflicting include/exclude table settings"}),"\n",(0,s.jsx)(n.li,{children:"Missing dependencies for enabled features"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"dart run tether --config tether.yaml"})," to validate your configuration and\ngenerate code."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);